diff --git a/buildfarm/utils/hgtool.py b/buildfarm/utils/hgtool.py
index 4c56125..50cf3d0 100755
--- a/buildfarm/utils/hgtool.py
+++ b/buildfarm/utils/hgtool.py
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/env python
 """%prog [-p|--props-file] [-r|--rev revision] [-b|--branch branch]
          [-s|--shared-dir shared_dir] [--check-outgoing] repo [dest]
 
@@ -7,7 +7,8 @@ Tool to do safe operations with hg.
 revision/branch on commandline will override those in props-file"""
 
 # Import snippet to find tools lib
-import os, sys
+import os
+import sys
 sys.path.append(os.path.join(os.path.dirname(__file__), "../../lib/python"))
 
 from util.hg import mercurial, out, remove_path
@@ -18,37 +19,37 @@ if __name__ == '__main__':
 
     parser = OptionParser(__doc__)
     parser.set_defaults(
-            revision=os.environ.get('HG_REV'),
-            branch=os.environ.get('HG_BRANCH', 'default'),
-            outgoing=False,
-            propsfile=os.environ.get('PROPERTIES_FILE'),
-            tbox=bool(os.environ.get('PROPERTIES_FILE')),
-            loglevel=logging.INFO,
-            shared_dir=os.environ.get('HG_SHARE_BASE_DIR'),
-            clone_by_rev=False,
-            mirrors=None,
-            bundles=None,
-            )
-    parser.add_option("-r", "--rev", dest="revision", help="which revision to update to")
-    parser.add_option("-b", "--branch", dest="branch", help="which branch to update to")
+        revision=os.environ.get('HG_REV'),
+        branch=os.environ.get('HG_BRANCH', None),
+        outgoing=False,
+        propsfile=os.environ.get('PROPERTIES_FILE'),
+        loglevel=logging.INFO,
+        shared_dir=os.environ.get('HG_SHARE_BASE_DIR'),
+        clone_by_rev=False,
+        mirrors=None,
+        bundles=None,
+    )
+    parser.add_option(
+        "-r", "--rev", dest="revision", help="which revision to update to")
+    parser.add_option(
+        "-b", "--branch", dest="branch", help="which branch to update to")
     parser.add_option("-p", "--props-file", dest="propsfile",
-        help="build json file containing revision information")
-    parser.add_option("--tbox", dest="tbox", action="store_true",
-        help="output TinderboxPrint messages")
-    parser.add_option("--no-tbox", dest="tbox", action="store_false",
-        help="don't output TinderboxPrint messages")
+                      help="build json file containing revision information")
     parser.add_option("-s", "--shared-dir", dest="shared_dir",
-        help="clone to a shared directory")
+                      help="clone to a shared directory")
     parser.add_option("--check-outgoing", dest="outgoing", action="store_true",
-        help="check for and clobber outgoing changesets")
-    parser.add_option("--clone-by-revision", dest="clone_by_rev", action="store_true",
+                      help="check for and clobber outgoing changesets")
+    parser.add_option(
+        "--clone-by-revision", dest="clone_by_rev", action="store_true",
         help="do initial clone with -r <rev> instead of cloning the entire repo. "
              "This is slower but is useful when cloning repositories with many "
              "heads which may timeout otherwise.")
     parser.add_option("--mirror", dest="mirrors", action="append",
-        help="add a mirror to try cloning/pulling from before repo")
+                      help="add a mirror to try cloning/pulling from before repo")
     parser.add_option("--bundle", dest="bundles", action="append",
-        help="add a bundle to try downloading/unbundling from before doing a full clone")
+                      help="add a bundle to try downloading/unbundling from before doing a full clone")
+    parser.add_option("--purge", dest="auto_purge", action="store_true",
+                      help="Purge the destination directory (if it exists).")
 
     options, args = parser.parse_args()
 
@@ -75,7 +76,7 @@ if __name__ == '__main__':
         if options.branch is None:
             options.branch = js['sourcestamp']['branch']
 
-    #look for and clobber outgoing changesets
+    # look for and clobber outgoing changesets
     if options.outgoing:
         if out(dest, repo):
             remove_path(dest)
@@ -86,13 +87,7 @@ if __name__ == '__main__':
                              shareBase=options.shared_dir,
                              clone_by_rev=options.clone_by_rev,
                              mirrors=options.mirrors,
-                             bundles=options.bundles)
+                             bundles=options.bundles,
+                             autoPurge=options.auto_purge)
 
-    if options.tbox:
-        if repo.startswith("http"):
-            url = "%s/rev/%s" % (repo, got_revision)
-            print "TinderboxPrint: <a href=\"%(url)s\">revision: %(got_revision)s</a>" % locals()
-        else:
-            print "TinderboxPrint: revision: %s" % got_revision
-    else:
-        print "Got revision %s" % got_revision
+    print "Got revision %s" % got_revision
