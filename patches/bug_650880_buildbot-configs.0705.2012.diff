diff --git a/mozilla-tests/config.py b/mozilla-tests/config.py
index a8778c6..f519038 100644
--- a/mozilla-tests/config.py
+++ b/mozilla-tests/config.py
@@ -1233,6 +1233,62 @@ for branch in ('mozilla-central', 'mozilla-inbound', 'try', ):
                 'hg_bin': hg_bin,
             })]
 
+# each elem in mozharness_unittest_suites is ugly and confusing because it blends Buildbot
+# outputs with Mozharness inputs. The 'suite_name' and 'sub_categories' mimics
+# what buildbot (mainly misc) considers as 'suite_name' and 'suite'
+# respectively. 'suite_category' is used for an argument in mozharness's extra-args
+mozharness_unittest_suites = [
+    {'suite_name' : 'mozharness_mochitests-1/5', 'suite_category' : 'mochitest', 'sub_categories' : ['plain1']},
+    {'suite_name' : 'mozharness_mochitests-2/5', 'suite_category' : 'mochitest', 'sub_categories' : ['plain2']},
+    {'suite_name' : 'mozharness_mochitests-3/5', 'suite_category' : 'mochitest', 'sub_categories' : ['plain3']},
+    {'suite_name' : 'mozharness_mochitests-4/5', 'suite_category' : 'mochitest', 'sub_categories' : ['plain4']},
+    {'suite_name' : 'mozharness_mochitests-5/5', 'suite_category' : 'mochitest', 'sub_categories' : ['plain5']},
+    {'suite_name' : 'mozharness_mochitests-other', 'suite_category' : 'mochitest', 'sub_categories' : \
+        ['browser-chrome', 'chrome', 'a11y', 'plugins']},
+    {'suite_name' : 'mozharness_reftest', 'suite_category' : 'reftest', 'sub_categories' : ['reftest']},
+    {'suite_name' : 'mozharness_jsreftest', 'suite_category' : 'reftest', 'sub_categories' : ['jsreftest']},
+    {'suite_name' : 'mozharness_crashtest', 'suite_category' : 'reftest', 'sub_categories' : ['crashtest']},
+    {'suite_name' : 'mozharness_xpcshell', 'suite_category' : 'xpcshell', 'sub_categories' : ['xpcshell']}
+]
+# TODO elm?
+for branch in ['elm']:
+    for pf in PLATFORMS:
+        hg_bin = 'hg'
+        if isinstance(PLATFORMS[pf]['mozharness_python'], list):
+            reboot_command = PLATFORMS[pf]['mozharness_python'][:]
+        else:
+            reboot_command = [PLATFORMS[pf]['mozharness_python']]
+        reboot_command.extend(['build/tools/buildfarm/maintenance/count_and_reboot.py',
+                               '-f', '../reboot_count.txt',
+                               '-n', '1', '-z'])
+        if 'android' in pf:
+            continue
+        if pf.startswith("win"):
+            hg_bin = 'c:\\mozilla-build\\hg\\hg'
+            config_file = "unittests/win_unittest.py"
+        elif pf.startswith("mac"):
+            config_file = "unittests/mac_unittest.py"
+        else:
+            config_file = "unittests/linux_unittest.py"
+
+        for slave_pf in PLATFORMS[pf]['slave_platforms']:
+            if pf == "macosx" and slave_pf == "leopard-o":
+                continue
+            for suite in mozharness_unittest_suites:
+                extra_args = ["--cfg", config_file]
+                for sub_category in suite['sub_categories']:
+                    extra_args += ["--%s-suite" % suite['suite_category'], sub_category]
+                BRANCHES[branch]['platforms'][pf][slave_pf]['opt_unittest_suites'] += [
+                    (suite['suite_name'], {
+                        'mozharness_repo': 'http://hg.mozilla.org/users/jlund_mozilla.com/mozharness',
+                        'script_path': 'scripts/desktop_unittest.py',
+                        'extra_args': extra_args,
+                        'reboot_command': reboot_command,
+                        'hg_bin': hg_bin,
+                        'script_maxtime' : 7200,
+                })]
+###################### END OF MOZHARNESS UNITTEST CONFIGS
+
 ######## generic branch variables for project branches
 for projectBranch in ACTIVE_PROJECT_BRANCHES:
     branchConfig = PROJECT_BRANCHES[projectBranch]
